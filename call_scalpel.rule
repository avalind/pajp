configfile: "config.json"

def regions():
	return ["0"+str(x) for x in range(0,10)]+[str(x) for x in range(10,16)]

def region_inputfunc(sample_name):
	string_list=[]
	for reg in regions():
		string_list.append("scalpel/{0}_{1}/somatic.indel.vcf".format(sample_name, reg))
	return string_list 

#rule all:
#	input:
#		expand("{tumor_sample}.somatic.indel.vcf", tumor_sample=config["tumor_sample"])

rule merge_region_vcfs:
	input:
		region_inputfunc
	output:
		"{tumor_sample}.somatic.indel.vcf"
	params:
		gatk_ref=config["gatk_ref"],
		time="2:00:00"
	run:
		input_string=""
		for vcf in input:
			input_string += " -V {0}".format(vcf)
		
		shell("module load bioinfo-tools java GATK && "+
		"java -cp $GATK_HOME/GenomeAnalysisTK.jar org.broadinstitute.gatk.tools.CatVariants "+
		"-R {params.gatk_ref} "+
		"--outputFile {output} "+
		"--assumeSorted "+
		input_string)
		
rule call_single_region:
	input:
		tumor="{tumor_sample}.merged.dedup.per_patient_realigned.bam",
		normal=expand("{normal_sample}.merged.dedup.per_patient_realigned.bam", normal_sample=config["normal_sample"]),
		region="/home/andersv/sureselect_regions_v5/extended_scalpel_intervals/scalpel_region.{region_number}"
	output:
		"scalpel/{tumor_sample}_{region_number}/somatic.indel.vcf"
	params:
		gatk_ref=config["gatk_ref"],
		time="8:00:00"
	run:
		tumor_name = input.tumor[:9]
		region_number = input.region[-2:]

		shell("module load bioinfo-tools scalpel && "+
		"scalpel-discovery --somatic --two-pass "+
		"--normal {input.normal} "+
		"--tumor {input.tumor} "+
		"--bed {input.region} "+
		"--ref {params.gatk_ref} "+
		"--dir scalpel/{tumor_name}_{region_number}/ ")
